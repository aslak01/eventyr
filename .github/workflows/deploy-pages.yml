name: Deploy to GitHub Pages

on:
  push:
    branches: [master]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Create dist directory
        run: mkdir -p dist

      - name: Cache optimized images
        uses: actions/cache@v4
        id: image-cache
        with:
          path: |
            dist/images
            dist/.image-cache.json
          key: image-cache-v3-${{ hashFiles('src/lib/books/**/*.{png,jpg,jpeg,gif,svg,webp}') }}-${{ hashFiles('src/image_processing/**/*.ts', 'src/types/types.ts') }}
          restore-keys: |
            image-cache-v3-${{ hashFiles('src/lib/books/**/*.{png,jpg,jpeg,gif,svg,webp}') }}-
            image-cache-v3-
            image-cache-v2-

      - name: Cache debug info
        run: |
          echo "Cache hit: ${{ steps.image-cache.outputs.cache-hit }}"
          echo "Cache key: image-cache-${{ hashFiles('src/lib/books/**/*.{png,jpg,jpeg,gif,svg,webp}') }}"
          if [ -f dist/.image-cache.json ]; then
            echo "Cache file exists, size: $(wc -l < dist/.image-cache.json) lines"
            echo "Sample cache entries:"
            head -5 dist/.image-cache.json
          else
            echo "No cache file found"
          fi
          if [ -d dist/images ]; then
            echo "Images directory exists, file count: $(find dist/images -name '*.webp' | wc -l)"
          else
            echo "No images directory found"
          fi

      - name: Build site
        run: bun run build
        env:
          NODE_ENV: production
          BASE_PATH: /eventyr

      - name: Post-build cache verification
        run: |
          echo "=== POST-BUILD CACHE VERIFICATION ==="
          if [ -f dist/.image-cache.json ]; then
            echo "Cache file exists after build"
            echo "Cache entries: $(jq '. | length' dist/.image-cache.json)"
            echo "Sample entry with gitHash:"
            jq '. | to_entries | .[0].value | {mtime, gitHash}' dist/.image-cache.json
          else
            echo "❌ No cache file found after build!"
          fi

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
